package cle.domain;

// Generated 11-Mar-2011 20:55:57 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.codehaus.jackson.annotate.JsonAutoDetect;
import org.codehaus.jackson.annotate.JsonIgnore;
import org.codehaus.jackson.annotate.JsonProperty;
import org.codehaus.jackson.annotate.JsonAutoDetect.Visibility;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.Index;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.IndexedEmbedded;
import org.hibernate.search.annotations.Store;

/**
 * Page generated by hbm2java
 */
@Entity
@Indexed
@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
@Table(name = "page")
@JsonAutoDetect(setterVisibility=Visibility.NONE, creatorVisibility = Visibility.NONE, getterVisibility=Visibility.NONE, fieldVisibility=Visibility.NONE)
public class Page implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	@JsonProperty
	@Field(index=Index.TOKENIZED, store=Store.NO)
	@Id
	private Integer pageid;
	@JsonIgnore
	private Resource resource;
	@JsonProperty
	private int pagenumber;
	@JsonProperty
	@Field(index=Index.TOKENIZED, store=Store.NO)
	private String title;
	@JsonProperty
	@Field(index=Index.TOKENIZED, store=Store.NO)
	private String content;
	@JsonProperty
	@Field(index=Index.TOKENIZED, store=Store.NO)
	private String tags;
	@JsonProperty
	private Date modified;
	@JsonProperty
	private Integer visibility;
	@JsonIgnore
	private Set<Comment> comments = new HashSet<Comment>(0);

	public Page() {
	}

	public Page(Resource resource, int pagenumber) {
		this.resource = resource;
		this.pagenumber = pagenumber;
	}

	public Page(Resource resource, int pagenumber, String title,
			String content, String tags, Date modified, Integer visibility,
			Set<Comment> comments) {
		this.resource = resource;
		this.pagenumber = pagenumber;
		this.title = title;
		this.content = content;
		this.tags = tags;
		this.modified = modified;
		this.visibility = visibility;
		this.comments = comments;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "pageid", unique = true, nullable = false)
	public Integer getPageid() {
		return this.pageid;
	}

	public void setPageid(Integer pageid) {
		this.pageid = pageid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "resourceid", nullable = false)
	public Resource getResource() {
		return this.resource;
	}

	public void setResource(Resource resource) {
		this.resource = resource;
	}

	@Column(name = "pagenumber", nullable = false)
	public int getPagenumber() {
		return this.pagenumber;
	}

	public void setPagenumber(int pagenumber) {
		this.pagenumber = pagenumber;
	}

	@Column(name = "title", length = 45)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "content")
	public String getContent() {
		return this.content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	@Column(name = "tags", length = 65535)
	public String getTags() {
		return this.tags;
	}

	public void setTags(String tags) {
		this.tags = tags;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modified", length = 19)
	public Date getModified() {
		return this.modified;
	}

	public void setModified(Date modified) {
		this.modified = modified;
	}

	@Column(name = "visibility")
	public Integer getVisibility() {
		return this.visibility;
	}

	public void setVisibility(Integer visibility) {
		this.visibility = visibility;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "page")
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

}
