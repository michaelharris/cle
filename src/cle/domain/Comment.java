package cle.domain;

// Generated 11-Mar-2011 20:55:57 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.codehaus.jackson.annotate.JsonAutoDetect;
import org.codehaus.jackson.annotate.JsonAutoDetect.Visibility;
import org.codehaus.jackson.annotate.JsonIgnore;
import org.codehaus.jackson.annotate.JsonIgnoreProperties;
import org.codehaus.jackson.annotate.JsonProperty;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * Comment generated by hbm2java
 */
@Entity
@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
@Table(name = "comment")
@JsonIgnoreProperties({"hibernateLazyInitializer"})
@JsonAutoDetect(setterVisibility=Visibility.NONE, creatorVisibility = Visibility.NONE, getterVisibility=Visibility.NONE, fieldVisibility=Visibility.NONE)
public class Comment implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	@JsonProperty
	private Integer commentid;
	@JsonIgnore
	private Module module;
	@JsonIgnore
	private Resource resource;
	@JsonIgnore
	private Collection collection;
	@JsonProperty
	private User user;
	@JsonIgnore
	private Page page;
	private Comment comment;
	@JsonProperty
	private Integer elementid;
	@JsonProperty
	private String location;
	@JsonProperty
	private String commenttext;
	@JsonProperty
	private Date modified;
	@JsonProperty
	private Date created;
	@JsonProperty
	private Integer visibility;
	private Set<Comment> comments = new HashSet<Comment>(0);

	public Comment() {
	}

	public Comment(User user, String commenttext, Date modified) {
		this.user = user;
		this.commenttext = commenttext;
		this.modified = modified;
	}

	public Comment(Module module, Resource resource, Collection collection,
			User user, Page page, Comment comment, Integer elementid,
			String location, String commenttext, Date modified, Date created,
			Integer visibility, Set<Comment> comments) {
		this.module = module;
		this.resource = resource;
		this.collection = collection;
		this.user = user;
		this.page = page;
		this.comment = comment;
		this.elementid = elementid;
		this.location = location;
		this.commenttext = commenttext;
		this.modified = modified;
		this.created = created;
		this.visibility = visibility;
		this.comments = comments;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "commentid", unique = true, nullable = false)
	public Integer getCommentid() {
		return this.commentid;
	}

	public void setCommentid(Integer commentid) {
		this.commentid = commentid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "moduleid")
	public Module getModule() {
		return this.module;
	}

	public void setModule(Module module) {
		this.module = module;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "resourceid")
	public Resource getResource() {
		return this.resource;
	}

	public void setResource(Resource resource) {
		this.resource = resource;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "collectionid")
	public Collection getCollection() {
		return this.collection;
	}

	public void setCollection(Collection collection) {
		this.collection = collection;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "userid", nullable = false)
	public User getUser() {
		return this.user;
	}
	
	public void setUser(User user) {
		this.user = user;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "pageid")
	public Page getPage() {
		return this.page;
	}

	public void setPage(Page page) {
		this.page = page;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "commentparentid")
	public Comment getComment() {
		return this.comment;
	}

	public void setComment(Comment comment) {
		this.comment = comment;
	}

	@Column(name = "elementid")
	public Integer getElementid() {
		return this.elementid;
	}

	public void setElementid(Integer elementid) {
		this.elementid = elementid;
	}

	@Column(name = "location")
	public String getLocation() {
		return this.location;
	}

	public void setLocation(String location) {
		this.location = location;
	}

	@Column(name = "commenttext", nullable = false, length = 65535)
	public String getCommenttext() {
		return this.commenttext;
	}

	public void setCommenttext(String commenttext) {
		this.commenttext = commenttext;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modified", nullable = false, length = 19)
	public Date getModified() {
		return this.modified;
	}

	public void setModified(Date modified) {
		this.modified = modified;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Column(name = "visibility")
	public Integer getVisibility() {
		return this.visibility;
	}

	public void setVisibility(Integer visibility) {
		this.visibility = visibility;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "comment")
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

}
