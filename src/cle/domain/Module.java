package cle.domain;

// Generated 11-Mar-2011 20:55:57 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.CascadeType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * Module generated by hbm2java
 */
@Entity
@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
@Table(name = "module")
public class Module implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer moduleid;
	private String tags;
	private String description;
	private String title;
	private Date modified;
	private Date created;
	private Set<User> users = new HashSet<User>(0);
	private Set<Comment> comments = new HashSet<Comment>(0);
	private Set<Collection> collections = new HashSet<Collection>(0);

	public Module() {
	}

	public Module(Date modified) {
		this.modified = modified;
	}

	public Module(String tags, String description, String title, Date modified,
			Date created, Set<User> users, Set<Comment> comments,
			Set<Collection> collections) {
		this.tags = tags;
		this.description = description;
		this.title = title;
		this.modified = modified;
		this.created = created;
		this.users = users;
		this.comments = comments;
		this.collections = collections;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "moduleid", unique = true, nullable = false)
	public Integer getModuleid() {
		return this.moduleid;
	}

	public void setModuleid(Integer moduleid) {
		this.moduleid = moduleid;
	}

	@Column(name = "tags", length = 65535)
	public String getTags() {
		return this.tags;
	}

	public void setTags(String tags) {
		this.tags = tags;
	}

	@Column(name = "description", length = 45)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "title", length = 45)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modified", nullable = false, length = 19)
	public Date getModified() {
		return this.modified;
	}

	public void setModified(Date modified) {
		this.modified = modified;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "module_has_user", joinColumns = { @JoinColumn(name = "module_moduleid", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "user_userid", nullable = false, updatable = false) })
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "module")
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "module_has_collection", joinColumns = { @JoinColumn(name = "module_moduleid", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "collection_collectionid", nullable = false, updatable = false) })
	public Set<Collection> getCollections() {
		return this.collections;
	}

	public void setCollections(Set<Collection> collections) {
		this.collections = collections;
	}

	public void addCollection(Collection c) {
		this.collections.add(c);
	}

	public void addUser(User u) {
		u.getModules().add(this);
		getUsers().add(u);

	}

}
